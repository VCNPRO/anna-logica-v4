{
  "version": "48.0.0",
  "artifacts": {
    "AnnaLogicaStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "AnnaLogicaStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "AnnaLogicaStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://587736032304/us-east-1",
      "properties": {
        "templateFile": "AnnaLogicaStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::587736032304:role/cdk-hnb659fds-deploy-role-587736032304-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::587736032304:role/cdk-hnb659fds-cfn-exec-role-587736032304-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-587736032304-us-east-1/e0eda77769fa09552cbe65550036ee648494003ff317e07a097ad59c47dea327.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "AnnaLogicaStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::587736032304:role/cdk-hnb659fds-lookup-role-587736032304-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "AnnaLogicaStack.assets"
      ],
      "metadata": {
        "/AnnaLogicaStack/AnnaLogicaVPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCB1B0A8B0"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1SubnetA1F168D7"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1RouteTable38586DF3"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1RouteTableAssociationAB2F871E"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1DefaultRoute6BFAD112"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1EIP904FED23"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet1NATGateway30EFD5B1"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet2Subnet2F08E572"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet2RouteTable3B40E64E"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet2RouteTableAssociation44F10A98"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPublicSubnet2DefaultRouteD5401D0C"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet1RouteTable5D40B276"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet2RouteTable10960DC8"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCIGW772B6486"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaVPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaVPCVPCGW7AC397D0"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFS30B22B9B"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/EfsSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFSEfsSecurityGroup9A3A0A20"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/EfsSecurityGroup/from AnnaLogicaStackAnnaLogicaTranscribeLambdaSecurityGroupC99146AA:2049": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackAnnaLogicaTranscribeLambdaSecurityGroupC99146AA20498A9EE721"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/EfsSecurityGroup/from AnnaLogicaStackAnnaLogicaUploadLambdaSecurityGroup2BD2D951:2049": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackAnnaLogicaUploadLambdaSecurityGroup2BD2D9512049EC3E34C3"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/EfsMountTarget1": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFSEfsMountTarget1590644E3"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaEFS/EfsMountTarget2": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaEFSEfsMountTarget26156CC30"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaBucketC1174DAE"
          }
        ],
        "/AnnaLogicaStack/FFmpegLayer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "FFmpegLayer65FCD2A8"
          }
        ],
        "/AnnaLogicaStack/LambdaExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaExecutionRoleD5C26073"
          }
        ],
        "/AnnaLogicaStack/LambdaExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LambdaExecutionRoleDefaultPolicy6D69732F"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAccessPoint/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAccessPointC921AE73"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaTranscribeLambda/SecurityGroup": [
          {
            "type": "aws:cdk:warning",
            "data": "Ignoring Egress rule since 'allowAllOutbound' is set to true; To add customized rules, set allowAllOutbound=false on the SecurityGroup [ack: @aws-cdk/aws-ec2:ipv4IgnoreEgressRule]",
            "trace": [
              "Annotations.addMessage (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1978)",
              "Annotations.addWarningV2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:896)",
              "WrappedClass.addEgressRule (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\security-group.js:1:8515)",
              "descriptor.value (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\metadata-resource.js:1:2296)",
              "C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1929",
              "ReactiveList.forEachAndForever (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:6132)",
              "C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1890",
              "ReactiveList.forEachAndForever (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:6132)",
              "Connections.allowTo (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1818)",
              "WrappedClass.configureVpc (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-lambda\\lib\\function.js:1:27442)",
              "new Function2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-lambda\\lib\\function.js:1:14337)",
              "new Function2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "new AnnaLogicaStack (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\cdk\\anna-logica-stack.js:63:34)",
              "Object.<anonymous> (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\cdk\\app.js:8:1)",
              "Module._compile (node:internal/modules/cjs/loader:1706:14)",
              "Object..js (node:internal/modules/cjs/loader:1839:10)",
              "Module.load (node:internal/modules/cjs/loader:1441:32)",
              "Function._load (node:internal/modules/cjs/loader:1263:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:322:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:237:24)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)",
              "node:internal/main/run_main_module:36:49"
            ]
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaTranscribeLambda/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaTranscribeLambdaSecurityGroup1E144FD1"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaTranscribeLambda/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaTranscribeLambdaCE7D4013"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaUploadLambda/SecurityGroup": [
          {
            "type": "aws:cdk:warning",
            "data": "Ignoring Egress rule since 'allowAllOutbound' is set to true; To add customized rules, set allowAllOutbound=false on the SecurityGroup [ack: @aws-cdk/aws-ec2:ipv4IgnoreEgressRule]",
            "trace": [
              "Annotations.addMessage (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1978)",
              "Annotations.addWarningV2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:896)",
              "WrappedClass.addEgressRule (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\security-group.js:1:8515)",
              "descriptor.value (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\metadata-resource.js:1:2296)",
              "C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1929",
              "ReactiveList.forEachAndForever (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:6132)",
              "C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1890",
              "ReactiveList.forEachAndForever (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:6132)",
              "Connections.allowTo (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\connections.js:1:1818)",
              "WrappedClass.configureVpc (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-lambda\\lib\\function.js:1:27442)",
              "new Function2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\aws-lambda\\lib\\function.js:1:14337)",
              "new Function2 (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "new AnnaLogicaStack (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\cdk\\anna-logica-stack.js:84:30)",
              "Object.<anonymous> (C:\\Users\\La Bestia\\Desktop\\anna-logica-v4\\cdk\\app.js:8:1)",
              "Module._compile (node:internal/modules/cjs/loader:1706:14)",
              "Object..js (node:internal/modules/cjs/loader:1839:10)",
              "Module.load (node:internal/modules/cjs/loader:1441:32)",
              "Function._load (node:internal/modules/cjs/loader:1263:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:322:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:237:24)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:171:5)",
              "node:internal/main/run_main_module:36:49"
            ]
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaUploadLambda/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaUploadLambdaSecurityGroup10874C88"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaUploadLambda/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaUploadLambda1D1B7888"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIF1A98B33"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPICloudWatchRole5AFCA780"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIAccount3B219462"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIDeployment773472093f8296df428ba3bc97798a3d6e26b8f0"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/DeploymentStage.prod/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIEndpointBA8ED104"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/transcribe/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPItranscribeF20DD38F"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/transcribe/POST/ApiPermission.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..transcribe": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPItranscribePOSTApiPermissionAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTtranscribe0BF0E39A"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/transcribe/POST/ApiPermission.Test.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..transcribe": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPItranscribePOSTApiPermissionTestAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTtranscribe0AF8FEA0"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/transcribe/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPItranscribePOSTA48815C4"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadC943D3C1"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/POST/ApiPermission.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..upload": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadPOSTApiPermissionAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTupload630DAE57"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/POST/ApiPermission.Test.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..upload": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadPOSTApiPermissionTestAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTuploadA6291044"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadPOST6B24F3F2"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/chunk/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadchunk223EE18F"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/chunk/POST/ApiPermission.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..upload.chunk": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadchunkPOSTApiPermissionAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTuploadchunk95DCF260"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/chunk/POST/ApiPermission.Test.AnnaLogicaStackAnnaLogicaAPI6DAEA86F.POST..upload.chunk": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadchunkPOSTApiPermissionTestAnnaLogicaStackAnnaLogicaAPI6DAEA86FPOSTuploadchunkFE49A57C"
          }
        ],
        "/AnnaLogicaStack/AnnaLogicaAPI/Default/upload/chunk/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnnaLogicaAPIuploadchunkPOSTDA28D7BD"
          }
        ],
        "/AnnaLogicaStack/APIUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "APIUrl"
          }
        ],
        "/AnnaLogicaStack/S3Bucket": [
          {
            "type": "aws:cdk:logicalId",
            "data": "S3Bucket"
          }
        ],
        "/AnnaLogicaStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/AnnaLogicaStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/AnnaLogicaStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "AnnaLogicaStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": false,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1029.3"
}