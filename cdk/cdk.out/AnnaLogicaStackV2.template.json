{
 "Resources": {
  "AnnaLogicaVPCB1B0A8B0": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/Resource"
   }
  },
  "AnnaLogicaVPCPublicSubnet1SubnetA1F168D7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/Subnet"
   }
  },
  "AnnaLogicaVPCPublicSubnet1RouteTable38586DF3": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/RouteTable"
   }
  },
  "AnnaLogicaVPCPublicSubnet1RouteTableAssociationAB2F871E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1RouteTable38586DF3"
    },
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1SubnetA1F168D7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "AnnaLogicaVPCPublicSubnet1DefaultRoute6BFAD112": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AnnaLogicaVPCIGW772B6486"
    },
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1RouteTable38586DF3"
    }
   },
   "DependsOn": [
    "AnnaLogicaVPCVPCGW7AC397D0"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "AnnaLogicaVPCPublicSubnet1EIP904FED23": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/EIP"
   }
  },
  "AnnaLogicaVPCPublicSubnet1NATGateway30EFD5B1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "AnnaLogicaVPCPublicSubnet1EIP904FED23",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1SubnetA1F168D7"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "AnnaLogicaVPCPublicSubnet1DefaultRoute6BFAD112",
    "AnnaLogicaVPCPublicSubnet1RouteTableAssociationAB2F871E"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet1/NATGateway"
   }
  },
  "AnnaLogicaVPCPublicSubnet2Subnet2F08E572": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2/Subnet"
   }
  },
  "AnnaLogicaVPCPublicSubnet2RouteTable3B40E64E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2/RouteTable"
   }
  },
  "AnnaLogicaVPCPublicSubnet2RouteTableAssociation44F10A98": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPublicSubnet2RouteTable3B40E64E"
    },
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPublicSubnet2Subnet2F08E572"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "AnnaLogicaVPCPublicSubnet2DefaultRouteD5401D0C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AnnaLogicaVPCIGW772B6486"
    },
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPublicSubnet2RouteTable3B40E64E"
    }
   },
   "DependsOn": [
    "AnnaLogicaVPCVPCGW7AC397D0"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1/Subnet"
   }
  },
  "AnnaLogicaVPCPrivateSubnet1RouteTable5D40B276": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1/RouteTable"
   }
  },
  "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet1RouteTable5D40B276"
    },
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1NATGateway30EFD5B1"
    },
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet1RouteTable5D40B276"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2/Subnet"
   }
  },
  "AnnaLogicaVPCPrivateSubnet2RouteTable10960DC8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2/RouteTable"
   }
  },
  "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet2RouteTable10960DC8"
    },
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "AnnaLogicaVPCPublicSubnet1NATGateway30EFD5B1"
    },
    "RouteTableId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet2RouteTable10960DC8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "AnnaLogicaVPCIGW772B6486": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/IGW"
   }
  },
  "AnnaLogicaVPCVPCGW7AC397D0": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "AnnaLogicaVPCIGW772B6486"
    },
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaVPC/VPCGW"
   }
  },
  "AnnaLogicaEFS30B22B9B": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemPolicy": {
     "Statement": [
      {
       "Action": [
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:ClientRootAccess"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaEFS"
     }
    ],
    "LifecyclePolicies": [
     {
      "TransitionToIA": "AFTER_30_DAYS"
     }
    ],
    "PerformanceMode": "generalPurpose",
    "ThroughputMode": "bursting"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/Resource"
   }
  },
  "AnnaLogicaEFSEfsSecurityGroup9A3A0A20": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaEFS"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsSecurityGroup/Resource"
   }
  },
  "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackV2AnnaLogicaTranscribeLambdaSecurityGroup728AAFD72049E7F9A634": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from AnnaLogicaStackV2AnnaLogicaTranscribeLambdaSecurityGroup728AAFD7:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "AnnaLogicaEFSEfsSecurityGroup9A3A0A20",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AnnaLogicaTranscribeLambdaSecurityGroup1E144FD1",
      "GroupId"
     ]
    },
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsSecurityGroup/from AnnaLogicaStackV2AnnaLogicaTranscribeLambdaSecurityGroup728AAFD7:2049"
   }
  },
  "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackV2AnnaLogicaUploadLambdaSecurityGroup642F365D20493C715F33": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from AnnaLogicaStackV2AnnaLogicaUploadLambdaSecurityGroup642F365D:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "AnnaLogicaEFSEfsSecurityGroup9A3A0A20",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AnnaLogicaUploadLambdaSecurityGroup10874C88",
      "GroupId"
     ]
    },
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsSecurityGroup/from AnnaLogicaStackV2AnnaLogicaUploadLambdaSecurityGroup642F365D:2049"
   }
  },
  "AnnaLogicaEFSEfsMountTarget1590644E3": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "AnnaLogicaEFS30B22B9B"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AnnaLogicaEFSEfsSecurityGroup9A3A0A20",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsMountTarget1"
   }
  },
  "AnnaLogicaEFSEfsMountTarget26156CC30": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "AnnaLogicaEFS30B22B9B"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AnnaLogicaEFSEfsSecurityGroup9A3A0A20",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaEFS/EfsMountTarget2"
   }
  },
  "AnnaLogicaBucketV210408878": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 365,
       "Id": "DeleteOldVersions",
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 30
       },
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaBucketV2/Resource"
   }
  },
  "AnnaLogicaBucketV2Policy52FA17A0": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AnnaLogicaBucketV210408878"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AnnaLogicaBucketV210408878",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AnnaLogicaBucketV210408878",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaBucketV2/Policy/Resource"
   }
  },
  "AnnaLogicaBucketV2AutoDeleteObjectsCustomResourceB002E5C8": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AnnaLogicaBucketV210408878"
    }
   },
   "DependsOn": [
    "AnnaLogicaBucketV2Policy52FA17A0"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaBucketV2/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-587736032304-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AnnaLogicaBucketV210408878"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AnnaLogicaBucketV210408878",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AnnaLogicaBucketV210408878",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:ClientRootAccess"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AnnaLogicaEFS30B22B9B",
         "Arn"
        ]
       }
      },
      {
       "Action": "elasticfilesystem:ClientMount",
       "Condition": {
        "StringEquals": {
         "elasticfilesystem:AccessPointArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":elasticfilesystem:us-east-1:587736032304:access-point/",
            {
             "Ref": "AnnaLogicaAccessPointC921AE73"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "elasticfilesystem:ClientWrite",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":elasticfilesystem:us-east-1:587736032304:file-system/",
          {
           "Ref": "AnnaLogicaEFS30B22B9B"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "AnnaLogicaAccessPointC921AE73": {
   "Type": "AWS::EFS::AccessPoint",
   "Properties": {
    "AccessPointTags": [
     {
      "Key": "Name",
      "Value": "AnnaLogicaStackV2/AnnaLogicaAccessPoint"
     }
    ],
    "FileSystemId": {
     "Ref": "AnnaLogicaEFS30B22B9B"
    },
    "RootDirectory": {
     "Path": "/mnt/scriptorium"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAccessPoint/Resource"
   }
  },
  "AnnaLogicaTranscribeLambdaSecurityGroup1E144FD1": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function AnnaLogicaStackV2AnnaLogicaTranscribeLambda63F6D377",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "DependsOn": [
    "AnnaLogicaEFSEfsMountTarget1590644E3",
    "AnnaLogicaEFSEfsMountTarget26156CC30",
    "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0",
    "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4",
    "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06",
    "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaTranscribeLambda/SecurityGroup/Resource"
   }
  },
  "AnnaLogicaTranscribeLambdaCE7D4013": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-587736032304-us-east-1",
     "S3Key": "731a5cc33847c690f08f02b1a3b4455f1145552a09fc07ef18cc5ec1e958069c.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "AnnaLogicaBucketV210408878"
      },
      "EFS_MOUNT_PATH": "/mnt/efs",
      "NODE_ENV": "production"
     }
    },
    "FileSystemConfigs": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":elasticfilesystem:us-east-1:587736032304:access-point/",
         {
          "Ref": "AnnaLogicaAccessPointC921AE73"
         }
        ]
       ]
      },
      "LocalMountPath": "/mnt/efs"
     }
    ],
    "Handler": "index.handler",
    "MemorySize": 3008,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "AnnaLogicaTranscribeLambdaSecurityGroup1E144FD1",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B"
      },
      {
       "Ref": "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC"
      }
     ]
    }
   },
   "DependsOn": [
    "AnnaLogicaEFSEfsMountTarget1590644E3",
    "AnnaLogicaEFSEfsMountTarget26156CC30",
    "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackV2AnnaLogicaTranscribeLambdaSecurityGroup728AAFD72049E7F9A634",
    "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0",
    "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4",
    "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06",
    "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011",
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaTranscribeLambda/Resource",
    "aws:asset:path": "asset.731a5cc33847c690f08f02b1a3b4455f1145552a09fc07ef18cc5ec1e958069c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AnnaLogicaUploadLambdaSecurityGroup10874C88": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function AnnaLogicaStackV2AnnaLogicaUploadLambdaF60CB625",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AnnaLogicaVPCB1B0A8B0"
    }
   },
   "DependsOn": [
    "AnnaLogicaEFSEfsMountTarget1590644E3",
    "AnnaLogicaEFSEfsMountTarget26156CC30",
    "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0",
    "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4",
    "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06",
    "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaUploadLambda/SecurityGroup/Resource"
   }
  },
  "AnnaLogicaUploadLambda1D1B7888": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-587736032304-us-east-1",
     "S3Key": "e4aca23960cef2d372d8b80f7a052e627575b2bddec89496338baa25dbf94f87.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "AnnaLogicaBucketV210408878"
      },
      "EFS_MOUNT_PATH": "/mnt/efs"
     }
    },
    "FileSystemConfigs": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":elasticfilesystem:us-east-1:587736032304:access-point/",
         {
          "Ref": "AnnaLogicaAccessPointC921AE73"
         }
        ]
       ]
      },
      "LocalMountPath": "/mnt/efs"
     }
    ],
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "AnnaLogicaUploadLambdaSecurityGroup10874C88",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "AnnaLogicaVPCPrivateSubnet1Subnet81A12B2B"
      },
      {
       "Ref": "AnnaLogicaVPCPrivateSubnet2Subnet793F1BBC"
      }
     ]
    }
   },
   "DependsOn": [
    "AnnaLogicaEFSEfsMountTarget1590644E3",
    "AnnaLogicaEFSEfsMountTarget26156CC30",
    "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackV2AnnaLogicaTranscribeLambdaSecurityGroup728AAFD72049E7F9A634",
    "AnnaLogicaEFSEfsSecurityGroupfromAnnaLogicaStackV2AnnaLogicaUploadLambdaSecurityGroup642F365D20493C715F33",
    "AnnaLogicaVPCPrivateSubnet1DefaultRoute336FC6C0",
    "AnnaLogicaVPCPrivateSubnet1RouteTableAssociationE35589C4",
    "AnnaLogicaVPCPrivateSubnet2DefaultRouteB974FE06",
    "AnnaLogicaVPCPrivateSubnet2RouteTableAssociationBBC3A011",
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaUploadLambda/Resource",
    "aws:asset:path": "asset.e4aca23960cef2d372d8b80f7a052e627575b2bddec89496338baa25dbf94f87",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AnnaLogicaAPIF1A98B33": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "BinaryMediaTypes": [
     "*/*"
    ],
    "Description": "Enterprise-grade AI transcription and analysis service",
    "Name": "Anna Logica Enterprise API"
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Resource"
   }
  },
  "AnnaLogicaAPICloudWatchRole5AFCA780": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/CloudWatchRole/Resource"
   }
  },
  "AnnaLogicaAPIAccount3B219462": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "AnnaLogicaAPICloudWatchRole5AFCA780",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AnnaLogicaAPIF1A98B33"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Account"
   }
  },
  "AnnaLogicaAPIDeployment7734720980b3225e8f5a4d2f368eae4822ca62db": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Enterprise-grade AI transcription and analysis service",
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "DependsOn": [
    "AnnaLogicaAPItranscribeGETF0F30BA4",
    "AnnaLogicaAPItranscribePOSTA48815C4",
    "AnnaLogicaAPItranscribeF20DD38F",
    "AnnaLogicaAPIuploadchunkPOSTDA28D7BD",
    "AnnaLogicaAPIuploadchunk223EE18F",
    "AnnaLogicaAPIuploadPOST6B24F3F2",
    "AnnaLogicaAPIuploadC943D3C1"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "AnnaLogicaAPIDeploymentStageprodC7FAF145": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AnnaLogicaAPIDeployment7734720980b3225e8f5a4d2f368eae4822ca62db"
    },
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "AnnaLogicaAPIAccount3B219462"
   ],
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/DeploymentStage.prod/Resource"
   }
  },
  "AnnaLogicaAPItranscribeF20DD38F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AnnaLogicaAPIF1A98B33",
      "RootResourceId"
     ]
    },
    "PathPart": "transcribe",
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/Resource"
   }
  },
  "AnnaLogicaAPItranscribePOSTApiPermissionAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTtranscribe733CBC13": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaTranscribeLambdaCE7D4013",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/",
       {
        "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
       },
       "/POST/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/POST/ApiPermission.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..transcribe"
   }
  },
  "AnnaLogicaAPItranscribePOSTApiPermissionTestAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTtranscribeC1329B2C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaTranscribeLambdaCE7D4013",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/test-invoke-stage/POST/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/POST/ApiPermission.Test.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..transcribe"
   }
  },
  "AnnaLogicaAPItranscribePOSTA48815C4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AnnaLogicaTranscribeLambdaCE7D4013",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestParameters": {
     "method.request.header.Content-Type": true
    },
    "ResourceId": {
     "Ref": "AnnaLogicaAPItranscribeF20DD38F"
    },
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/POST/Resource"
   }
  },
  "AnnaLogicaAPItranscribeGETApiPermissionAnnaLogicaStackV2AnnaLogicaAPIE503A413GETtranscribe7194E3DC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaTranscribeLambdaCE7D4013",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/",
       {
        "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
       },
       "/GET/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/GET/ApiPermission.AnnaLogicaStackV2AnnaLogicaAPIE503A413.GET..transcribe"
   }
  },
  "AnnaLogicaAPItranscribeGETApiPermissionTestAnnaLogicaStackV2AnnaLogicaAPIE503A413GETtranscribe4C162414": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaTranscribeLambdaCE7D4013",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/test-invoke-stage/GET/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/GET/ApiPermission.Test.AnnaLogicaStackV2AnnaLogicaAPIE503A413.GET..transcribe"
   }
  },
  "AnnaLogicaAPItranscribeGETF0F30BA4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AnnaLogicaTranscribeLambdaCE7D4013",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AnnaLogicaAPItranscribeF20DD38F"
    },
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/transcribe/GET/Resource"
   }
  },
  "AnnaLogicaAPIuploadC943D3C1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AnnaLogicaAPIF1A98B33",
      "RootResourceId"
     ]
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/Resource"
   }
  },
  "AnnaLogicaAPIuploadPOSTApiPermissionAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTupload42AF6AE1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaUploadLambda1D1B7888",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/",
       {
        "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
       },
       "/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/POST/ApiPermission.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..upload"
   }
  },
  "AnnaLogicaAPIuploadPOSTApiPermissionTestAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTupload68E18C7B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaUploadLambda1D1B7888",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/test-invoke-stage/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/POST/ApiPermission.Test.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..upload"
   }
  },
  "AnnaLogicaAPIuploadPOST6B24F3F2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AnnaLogicaUploadLambda1D1B7888",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AnnaLogicaAPIuploadC943D3C1"
    },
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/POST/Resource"
   }
  },
  "AnnaLogicaAPIuploadchunk223EE18F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AnnaLogicaAPIuploadC943D3C1"
    },
    "PathPart": "chunk",
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/chunk/Resource"
   }
  },
  "AnnaLogicaAPIuploadchunkPOSTApiPermissionAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTuploadchunkCDFB7BAA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaUploadLambda1D1B7888",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/",
       {
        "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
       },
       "/POST/upload/chunk"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/chunk/POST/ApiPermission.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..upload.chunk"
   }
  },
  "AnnaLogicaAPIuploadchunkPOSTApiPermissionTestAnnaLogicaStackV2AnnaLogicaAPIE503A413POSTuploadchunkF2B8D710": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnnaLogicaUploadLambda1D1B7888",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:587736032304:",
       {
        "Ref": "AnnaLogicaAPIF1A98B33"
       },
       "/test-invoke-stage/POST/upload/chunk"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/chunk/POST/ApiPermission.Test.AnnaLogicaStackV2AnnaLogicaAPIE503A413.POST..upload.chunk"
   }
  },
  "AnnaLogicaAPIuploadchunkPOSTDA28D7BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AnnaLogicaUploadLambda1D1B7888",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AnnaLogicaAPIuploadchunk223EE18F"
    },
    "RestApiId": {
     "Ref": "AnnaLogicaAPIF1A98B33"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/AnnaLogicaAPI/Default/upload/chunk/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RwW7bMAz9lt4VrfWAAju62VLkkM6wi14LWWZcJrZkiFQCw/C/D5KyOAWKnvjeEyk+PWUye3iU93fqTCvdHFcd1nKqWOmjUGd6n0BncnobtFjvzVuxFoWvO9SVrw1w0BZUWs/wquoOFn3RciKrUTFac20O4M+2COVF8bNiOKtRFA5PimG5eGsYnIFrQ3JyYTmz0h89GBYVaO+Qx2dn/RA9fCtsTeuAaBawJzltsINqJIY+NH5mO+sNvyrXAotcayAqLJro7YbOgn7K6cnrY7J9QakUtkM9LvKFJ/KkCGaBqpdTaVN8sS5DCc2iU33dKDltvNH/o7zFBbgeidCa4OZdEQGTzEMRasA2ZSanEojzAeOmBeZah5eK3zB0doyZrvfmhlWs2vS7EZRA1jsNwf+VXO5MeAf8YZuYYUTzfNPniW3/5djno8LZEzbg4pr4lrAeTRtm/noePM/C2AbkgX6cskw+/JL3dwdCXDlvGHuQZar/AO2XyoztAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "AnnaLogicaStackV2/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AnnaLogicaAPIEndpointBA8ED104": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AnnaLogicaAPIF1A98B33"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
      },
      "/"
     ]
    ]
   }
  },
  "APIUrl": {
   "Description": "Anna Logica API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AnnaLogicaAPIF1A98B33"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AnnaLogicaAPIDeploymentStageprodC7FAF145"
      },
      "/"
     ]
    ]
   }
  },
  "S3Bucket": {
   "Description": "S3 Bucket for file storage",
   "Value": {
    "Ref": "AnnaLogicaBucketV210408878"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}